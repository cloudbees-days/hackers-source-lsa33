apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: "lsa33-flow"
on:
  push:
    branches:
      - "**"
  workflow_dispatch:
permissions:
  scm-token-own: read
  scm-token-org: read
  id-token: write
jobs:
  test:
    # Cette partie reste inchangée
    steps:
      - name: Run Jenkins Job
        kind: test
        uses: cloudbees-io/jenkins-run-job@v2
        continue-on-error: true
        with:
          url: https://sda.preview.cb-demos.io/westest/
          username: ${{ secrets.WES_JENKINS_USERNAME }}
          token: ${{ secrets.WES_JENKINS_TOKEN }}
          job-name: WesTestJob
      - name: Run GHA Workflow
        kind: test
        uses: cloudbees-io/ghactions-run-workflow@v2
        continue-on-error: true
        with:
          token: ${{ secrets.WES_GH_TOKEN }}
          org-name: cloudbees-days
          repo-name: hackers-WesTest4AWS
          branch-name: main
          workflow-name: test-and-build-image
          test-type: JUnit
          test-result-location: junit.xml
      - name: Get source code
        uses: cloudbees-io/checkout@v1
        continue-on-error: true
      - name: Run unit tests
        kind: test
        id: RunUnitTest
        uses: docker://node:lts
        run: |
          npm ci
          npm run test:unit
          npx jest --coverage >> $CLOUDBEES_OUTPUTS/CODE_COVERAGE
      - name: Publish test results
        uses: cloudbees-io/publish-test-results@v1
        with:
          test-type: JUnit
          folder-name: ${{ cloudbees.workspace }}/junit.xml
      - name: Publish evidence
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: |-
            ## Test code coverage
            ${{ steps.RunUnitTest.outputs.CODE_COVERAGE }}
          format: MARKDOWN
    outputs:
      CODE_COVERAGE: ${{ steps.RunUnitTest.outputs.CODE_COVERAGE }}
  build-container-image:
    steps:
      - uses: cloudbees-io/checkout@v1
        name: Get source code
        kind: build
        continue-on-error: true
      - uses: cloudbees-io/configure-oci-credentials@v1
        name: Configure container registry credentials
        continue-on-error: true
        id: dockerconfig
        with:
          # Correction de l'URL du registre - utilisez l'URL du registre Docker sans le chemin du repository
          registry: nexus.cloudbees.guru:8081
          username: lsa26
          password: ${{ secrets.NEXUS_PASSWORD_LSA26 }}
      - uses: cloudbees-io/kaniko@v1
        name: Build container image
        kind: build
        with:
          # Correction de la destination - utilisez l'URL complète avec le chemin du repository
          destination: nexus.cloudbees.guru:8081/unify-docker-lsa26/hackers-organized:${{ cloudbees.scm.sha }}
          tar-path: container-image.tar
          build-args: BUILDKIT_CONTEXT_KEEP_GIT_DIR=1,BUILDKIT_INLINE_CACHE=1
      - uses: calculi-corp/assets-plugin-chain-utils/upload-binary@v1
        name: Upload binary from container build
        continue-on-error: true
        id: upload-binary
        with:
          file-path: container-image.tar
          file-type: BINARY_CONTAINER
          debug: "true"
      - name: Publish evidence
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: |-
            ## Built and pushed image to Nexus Docker Repository

            Nexus repository: unify-docker-lsa26
            Deployed hackers-organized:${{ cloudbees.scm.sha }}
          format: MARKDOWN
    needs: test
  scan:
    # Cette partie reste inchangée
    outputs:
      BLOCKER_COUNT: ${{ steps.FetchSonarQubeIssues.outputs.BLOCKER_COUNT }}
      CRITICAL_COUNT: ${{ steps.FetchSonarQubeIssues.outputs.CRITICAL_COUNT }}
      MAJOR_COUNT: ${{ steps.FetchSonarQubeIssues.outputs.MAJOR_COUNT }}
      MINOR_COUNT: ${{ steps.FetchSonarQubeIssues.outputs.MINOR_COUNT }}
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      # Le reste du job reste inchangé
  deploy:
    environment: DOW Production
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - uses: cashokannamalai/kubeconfig@v1
        name: Set kubeconfig
        with:
          secname: ${{ secrets.kubeconfig }}
      - uses: cloudbees-io/configure-oci-credentials@v1
        name: Configure container registry credentials for deployment
        with:
          # Même correction ici pour le registre
          registry: nexus.cloudbees.guru:8081
          username: lsa26
          password: ${{ secrets.NEXUS_PASSWORD }}
      - uses: cloudbees-io/kustomize-deploy@v1
        name: Deploy to cluster
        kind: deploy
        with:
          kustomization-base-dir: ${{ cloudbees.workspace }}/k8s/base
          kustomization-overlays-dir: ${{ cloudbees.workspace }}/k8s/overlays/prod
          # Mise à jour de l'URL de l'image
          environment-variables: "{\"IMAGE_NAME\":\"nexus.cloudbees.guru:8081/unify-docker-lsa26/hackers-organized:${{ cloudbees.scm.sha }}\"}"
      - name: Publish evidence
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: |-
            ## Deployed environment
            [Production frontend](https://hackers-organized-prod.preview.cb-demos.io/)

            Running hackers-organized:${{ cloudbees.scm.sha }} from Nexus Docker Repository
          format: MARKDOWN
      - name: Register_deployed_artifact
        uses: https://github.com/cloudbees-io/register-deployed-artifact@v1
        with:
          name: "nexus.cloudbees.guru:8081/unify-docker-lsa26/hackers-organized"
          version: "${{ cloudbees.scm.sha }}"
          url: "nexus.cloudbees.guru:8081/unify-docker-lsa26/hackers-organized:${{ cloudbees.scm.sha }}"
          digest: ""
          target-environment: "DOW Production"
    needs:
      - build-container-image
      - scan