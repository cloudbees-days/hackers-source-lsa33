apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: psgenius-n8n-ai-agent-nodejs
on:
  workflow_dispatch:
permissions:
  scm-token-own: read
  scm-token-org: read
  id-token: write
env:
  APP_NAME: hackers-organized
  NAMESPACE: lsa33
jobs:
  build-app:
    steps:
      - uses: cloudbees-io/checkout@v1
        name: Get source code
      - name: Build Node.js application
        id: BuildNodeApp
        uses: docker://node:lts
        run: |
          npm ci
          npm run build
      - name: Send failure notification with logs
        if: ${{ failure() }}
        uses: docker://alpine:latest
        run: |
          # Installer curl, jq et les outils nécessaires
          apk add --no-cache curl jq bash
          
          # Télécharger et installer la CLI CloudBees si nécessaire
          if ! command -v cloudbees &> /dev/null; then
            echo "Installation de la CLI CloudBees..."
            curl -fsSL https://downloads.cloudbees.com/cloudbees-cli/install.sh | bash
            export PATH=$PATH:/root/.cloudbees/bin
          fi
          
          # Récupérer les logs du workflow
          echo "Récupération des logs du workflow..."
          cloudbees workflow logs ${{ cloudbees.run_id }} > build_logs.txt || echo "Impossible de récupérer les logs via CLI"
          
          # Créer un payload incluant les logs
          TIMESTAMP=$(date +%s)
          
          if [ -f "build_logs.txt" ] && [ -s "build_logs.txt" ]; then
            # Utiliser jq pour créer un JSON valide avec les logs
            jq -n \
              --arg job "psgenius-n8n-ai-agent-nodejs" \
              --arg build "${{ cloudbees.run_id }}" \
              --arg result "FAILURE" \
              --arg timestamp "$TIMESTAMP" \
              --arg step "Node.js Build" \
              --arg logs "$(cat build_logs.txt)" \
              '{job: $job, build: $build, result: $result, timestamp: $timestamp, failedStep: $step, buildLogs: $logs}' > payload.json
          else
            # Fallback au payload de base si les logs ne sont pas disponibles
            echo "{\"job\":\"psgenius-n8n-ai-agent-nodejs\",\"build\":\"${{ cloudbees.run_id }}\",\"result\":\"FAILURE\",\"timestamp\":\"$TIMESTAMP\",\"failedStep\":\"Node.js Build\",\"buildLogs\":\"Logs non disponibles\"}" > payload.json
          fi
          
          echo "Envoi du payload webhook avec logs..."
          
          curl -X POST \
            -H "Content-Type: application/json" \
            -d @payload.json \
            --connect-timeout 60 \
            https://still-elegant-asp.ngrok-free.app/webhook/ci-failure